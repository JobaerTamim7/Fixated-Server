<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobaertamim3@gmail.com\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim3\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,21,4,17,758959200],&quot;historyId&quot;:&quot;49b11921-908d-4ad6-9220-c3ab213f6fc3&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobaertamim7@gmail.com\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim7\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,21,4,7,271239900],&quot;historyId&quot;:&quot;c82ee758-0eed-4344-afea-73e70b0c3e64&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobaertamim7@gmail.com\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim7\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,21,4,0,752182000],&quot;historyId&quot;:&quot;ba7cb0ea-ef4e-4c37-a538-9ed56cf437b0&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamm\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamm\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,44,58,990737200],&quot;historyId&quot;:&quot;b93e7682-e65f-4f45-92b7-5664142e0ab4&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamm\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,44,54,333709900],&quot;historyId&quot;:&quot;f7cf2f00-3121-41f2-9e8c-dac8a27ebb95&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,43,53,837954800],&quot;historyId&quot;:&quot;2d150d9b-b1e6-442a-8dd0-b3c23d76c450&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,38,37,259619100],&quot;historyId&quot;:&quot;91b9fc43-bf26-4192-97c6-3264d17d0769&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,35,17,890538900],&quot;historyId&quot;:&quot;40ec95f4-08bb-40f8-9dc8-8dd07dee0bc5&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,34,33,810186900],&quot;historyId&quot;:&quot;d8eb5d41-3bc9-4151-af10-6944bf6e5263&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,33,9,75677400],&quot;historyId&quot;:&quot;c77ccf15-a820-4979-a4d8-2e63dae93711&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,32,49,448682300],&quot;historyId&quot;:&quot;7a83d978-37ec-4538-b324-385a5ee86ffe&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,32,13,776052700],&quot;historyId&quot;:&quot;b5d96445-7923-4875-b07e-5661c8186dae&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,32,13,224208300],&quot;historyId&quot;:&quot;4614e608-6642-4b0e-85b7-76b11c8c5668&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,32,12,728391300],&quot;historyId&quot;:&quot;9e67d683-f8cc-4fea-ac7f-aa32052f8c08&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,32,12,264110000],&quot;historyId&quot;:&quot;566f0131-bc5e-466b-8858-884617eb4445&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,32,10,824142800],&quot;historyId&quot;:&quot;d0b4ef4c-9d39-491c-926e-e76bfbdd684e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,31,41,183687400],&quot;historyId&quot;:&quot;0bded4a9-eda9-45eb-9594-9523a4d3de19&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,31,20,305408600],&quot;historyId&quot;:&quot;3eee0a8e-1866-4cbc-9173-a19a21422f34&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,30,27,16034800],&quot;historyId&quot;:&quot;0f78c574-e75d-42f2-a220-37701381db32&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,19,934467200],&quot;historyId&quot;:&quot;bfe86475-f5f6-47e6-a3fc-3ab760255d95&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,19,774074800],&quot;historyId&quot;:&quot;a22d0079-47ac-4304-be50-969dd11354dd&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,19,613567400],&quot;historyId&quot;:&quot;7807c539-6f75-4a2e-ac58-b9120789676d&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,19,446175600],&quot;historyId&quot;:&quot;c44ef01e-2fa1-42ca-859c-91248259a579&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,19,278211000],&quot;historyId&quot;:&quot;be51fd4f-813e-4a52-b6fb-5753655754ec&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,19,110216600],&quot;historyId&quot;:&quot;a4749b3d-5045-422f-98e5-8c0c24040499&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,18,942221000],&quot;historyId&quot;:&quot;3c38a71b-d2e9-4147-ab2b-f2a306391c3b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,18,790197300],&quot;historyId&quot;:&quot;e0e61934-aa5b-41dc-9881-45ea618368a4&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,18,630500100],&quot;historyId&quot;:&quot;4c5a4d52-7aac-4f6d-9927-15b617b22508&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,18,470431300],&quot;historyId&quot;:&quot;efd2dd85-3a90-4700-ae17-4db6dbd00070&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,18,191055500],&quot;historyId&quot;:&quot;f024c519-a530-458a-9186-083965735a6e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,17,511992500],&quot;historyId&quot;:&quot;b4a6cbef-4592-4d7e-adc9-fbb652b1d2d8&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,15,126988600],&quot;historyId&quot;:&quot;68892ec1-e789-4782-93a6-857152aced20&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;ADMIN\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,27,5,902825000],&quot;historyId&quot;:&quot;968c81f5-ae12-41bc-b7fe-e25da2c27f0c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;ADMIN\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,12,4,793117100],&quot;historyId&quot;:&quot;2ea5bbf9-09c1-4396-beeb-eb15d4db78ea&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;Admin\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,55,992455100],&quot;historyId&quot;:&quot;b9552b81-354f-4d2a-9f21-c2d18037bec6&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,39,991983500],&quot;historyId&quot;:&quot;30aabb8e-c263-473b-9dc5-9eb3dca0447b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,39,808785100],&quot;historyId&quot;:&quot;6667b5ad-461a-4ef5-83ef-582325b3f114&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,39,624798400],&quot;historyId&quot;:&quot;199a11b3-2565-46be-bbb1-6b20d2eb3818&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,39,440238900],&quot;historyId&quot;:&quot;f6371c17-0c29-4849-9b2e-fda162348dba&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,39,248176300],&quot;historyId&quot;:&quot;e3fa518a-0e67-43a2-acd8-cf3373fae114&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,39,48799100],&quot;historyId&quot;:&quot;941812ba-2e7e-430d-bcb0-f4f7f9a840e3&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,38,864780800],&quot;historyId&quot;:&quot;7548ff6a-4a9e-493c-adcf-d07f1026198b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,38,688791200],&quot;historyId&quot;:&quot;c9e9e43c-4562-4188-a6e7-652beda242d2&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,38,489212400],&quot;historyId&quot;:&quot;e2ac5911-0cf4-46c0-9534-b59ee693323d&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,38,312324700],&quot;historyId&quot;:&quot;d4018772-32df-4a92-a846-12a1b876d452&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,38,120057300],&quot;historyId&quot;:&quot;f7d8ef1a-94ab-45a1-be93-8792fe8f9cf1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,37,945302800],&quot;historyId&quot;:&quot;5645611e-db1f-4776-948e-eace6a74477d&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,37,767932700],&quot;historyId&quot;:&quot;02765d59-105e-4187-9248-aab1a83c9f2e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,37,592702300],&quot;historyId&quot;:&quot;89b253b9-dfa4-4b84-8758-d1534d96bf91&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,37,164531600],&quot;historyId&quot;:&quot;407a0550-9813-4e88-987a-4c8d98b212d7&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,36,496920700],&quot;historyId&quot;:&quot;c6d7f7bd-7571-4e9c-95dd-1c2c87f992ec&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,31,760447300],&quot;historyId&quot;:&quot;a4371bc8-a394-4001-8736-96963774b321&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,31,608714400],&quot;historyId&quot;:&quot;8744e4c0-ea13-47e9-b5e7-88acd50f58e5&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,30,968749600],&quot;historyId&quot;:&quot;8ddbbb86-4cd3-42f9-9250-29c32e6673a5&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,28,736756200],&quot;historyId&quot;:&quot;e59f13b5-26ea-4726-b88c-2910574df7de&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,11,5,760365600],&quot;historyId&quot;:&quot;ea9c5691-874a-45fe-a812-8baa2088621b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,9,28,48237400],&quot;historyId&quot;:&quot;ad3c7a1e-8e89-42f8-a597-050e5c71959e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,9,22,816196700],&quot;historyId&quot;:&quot;60975104-7071-45f2-8983-1e63a37279a1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,9,14,776208900],&quot;historyId&quot;:&quot;d27d5a88-d598-4d7c-b890-4d03bc1a8147&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,4,2,264555500],&quot;historyId&quot;:&quot;61672a1f-669a-40cc-a718-5cde384a391e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,3,21,903628000],&quot;historyId&quot;:&quot;4a7f2e8c-af09-4bfe-9be7-78088261d994&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,1,30,159352500],&quot;historyId&quot;:&quot;282ab471-abfc-46d8-b71e-700c03a028bb&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,8,909567100],&quot;historyId&quot;:&quot;e964e723-d60b-40b7-9f1d-8945707a323e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,8,733058100],&quot;historyId&quot;:&quot;bcf5922b-59c8-4c07-815a-22c3b669dac1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,8,533992500],&quot;historyId&quot;:&quot;a18109bd-0f92-4501-b06c-5544121d1547&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,8,373668300],&quot;historyId&quot;:&quot;28f64390-6888-4429-9697-c6115064cd4e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,8,197958900],&quot;historyId&quot;:&quot;122fedce-c905-4999-b5c9-c67fab271c16&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,8,29976200],&quot;historyId&quot;:&quot;fee31ec2-79a5-4142-9831-a1383acc2cbe&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,7,861681500],&quot;historyId&quot;:&quot;a9b74509-7ff2-4838-8b81-700a3cdc93c4&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,7,685643200],&quot;historyId&quot;:&quot;15d8d23f-2620-4edd-bf0d-0535dace2bbc&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,7,310120200],&quot;historyId&quot;:&quot;38c3e77e-2708-4cd8-83ad-65b98505f9e2&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,7,13136700],&quot;historyId&quot;:&quot;d59d9a62-d7bd-4c94-bc0a-a6881b2f1578&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,20,0,6,197944800],&quot;historyId&quot;:&quot;9b9f5546-07ee-4d28-a1f4-31f0ff1c038c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,59,56,414867600],&quot;historyId&quot;:&quot;228c94fe-53c9-4a58-8e76-48c0c93db00c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,56,44,261029100],&quot;historyId&quot;:&quot;17dc0f27-9956-4fee-898a-54492f97aa6e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,56,22,334721800],&quot;historyId&quot;:&quot;34148020-20a7-44c4-a607-bd180d6965dc&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,56,14,701742400],&quot;historyId&quot;:&quot;435e4f4c-054f-407e-a4aa-20c58458962f&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,35,76344100],&quot;historyId&quot;:&quot;653e9826-7209-4089-a758-45899e01ce38&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,34,892302900],&quot;historyId&quot;:&quot;410967db-1544-485a-aa78-71e881adeff1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,34,708962600],&quot;historyId&quot;:&quot;b6dc0bf9-3bb8-43d9-8a26-1489fb8528a0&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,34,524970600],&quot;historyId&quot;:&quot;18655206-53ab-46cb-8cd2-e40ec60bf73f&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,34,348654400],&quot;historyId&quot;:&quot;02869aad-d97e-44df-ac1c-720bc4fe3ab1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,34,172884200],&quot;historyId&quot;:&quot;e784b653-ad62-415e-80eb-20ee9fefc7b8&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,33,979970200],&quot;historyId&quot;:&quot;eea166c9-88ea-4f1e-83ed-638a91a404c9&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,33,788355400],&quot;historyId&quot;:&quot;8d31f06d-902f-4ff7-b7ba-3c7acc560ee1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,33,612874800],&quot;historyId&quot;:&quot;e7570e76-3335-45d1-b888-f1dc079d8573&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,33,436960900],&quot;historyId&quot;:&quot;dab23f3f-f220-49bd-83a4-41201617ddc8&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,33,247136100],&quot;historyId&quot;:&quot;1903aca1-ca7d-450d-9de9-014bfe0fdf9d&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,33,61123400],&quot;historyId&quot;:&quot;ae07e0a3-0206-40d0-a15e-fbbe9bbaf776&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,32,876111700],&quot;historyId&quot;:&quot;ae4e2ae5-e602-4f28-8246-d1fb8ee8f488&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,32,692444000],&quot;historyId&quot;:&quot;d0bc4912-df4b-4e54-8956-18efacb5b477&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,32,516959000],&quot;historyId&quot;:&quot;1e0f8442-53f7-413a-a59c-2d7f1c2305bc&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,32,348652700],&quot;historyId&quot;:&quot;7f07d05b-1168-4e12-b5f8-3c1694c80650&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,32,180970100],&quot;historyId&quot;:&quot;121c21e5-aff6-462e-9701-a6eb22148be6&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,32,21093200],&quot;historyId&quot;:&quot;0ee9624e-dd7d-4cd4-941e-c76e77d1cf84&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,31,860848800],&quot;historyId&quot;:&quot;7522e36c-0015-4418-a628-29831709829f&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,31,685658000],&quot;historyId&quot;:&quot;269c1927-2061-49a4-a4dc-27e6139d87e2&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,31,516957000],&quot;historyId&quot;:&quot;ec70f836-3799-4123-9cae-feb461fe60e4&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;worker_id\&quot; : \&quot;\&quot;,\r\n  \&quot;branch_code\&quot; : \&quot;\&quot;,\r\n  \&quot;phone_number\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,55,28,572987100],&quot;historyId&quot;:&quot;e303ed26-9078-41ba-96a8-109b55b5ac98&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,45,931721100],&quot;historyId&quot;:&quot;b9d46ce1-3780-4767-9b4b-979b2459af2a&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,45,748383300],&quot;historyId&quot;:&quot;b4324093-1bee-4075-8d85-c7e36acd10f7&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,45,564585800],&quot;historyId&quot;:&quot;5ffe7ea6-9ba4-4f61-8d01-bba260e69820&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,45,380977600],&quot;historyId&quot;:&quot;7692640e-0edc-47f5-8c1f-c3e7103012ba&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,45,204587500],&quot;historyId&quot;:&quot;1b6b37bd-8b03-4b1d-a26a-9c9c8c8c88ab&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,45,19901000],&quot;historyId&quot;:&quot;6dac5d23-3ae1-45b2-84ee-e1c59af4982b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,44,828744300],&quot;historyId&quot;:&quot;6cc70675-8445-49c6-a157-3b999c5b551c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,44,652893700],&quot;historyId&quot;:&quot;84fc25af-e27b-4436-918d-638d40ef1098&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,44,468641800],&quot;historyId&quot;:&quot;d35cc8d0-a9bb-4bc5-9861-8141757a9cad&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,44,292587200],&quot;historyId&quot;:&quot;16ef4000-76bc-48f4-badf-34baf797cbe6&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,44,108658100],&quot;historyId&quot;:&quot;7df41368-c071-4532-b62b-db325aecdb55&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,43,940611600],&quot;historyId&quot;:&quot;5c6f5daf-ffaf-461a-ac93-7233a7a0b223&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,43,764809400],&quot;historyId&quot;:&quot;7ad9514a-a3d0-456e-ab09-ea20a077897b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,43,589312500],&quot;historyId&quot;:&quot;32c0b95f-8c82-4752-8a77-82d529a279f8&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,43,412584800],&quot;historyId&quot;:&quot;d4338c83-1c39-41e8-8c6f-6c7beb97ad2f&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,43,237834000],&quot;historyId&quot;:&quot;b0c62dc2-2fd0-4eaa-85f6-f046920e9907&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,42,812926600],&quot;historyId&quot;:&quot;b39ed3ea-ec6e-453c-89e1-15a25907f985&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,54,41,790173400],&quot;historyId&quot;:&quot;28124c52-8b53-416d-a010-bd591b1f77ba&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,53,55,205298600],&quot;historyId&quot;:&quot;50fdd4a5-e7e6-4c4d-b06b-452a9c6fcab9&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b35022e423673481071a9d310e21dd93&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/signup&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.SignUpController&quot;,&quot;methodName&quot;:&quot;signup&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;123456\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;mail\&quot; : \&quot;tamim\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;tamim\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,53,22,757193900],&quot;historyId&quot;:&quot;1070cc9f-b98c-4c45-9400-032d677bc605&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,52,36,989333900],&quot;historyId&quot;:&quot;56a9ce17-eb8f-4962-a6bf-fc2b811262ab&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;type\&quot; : \&quot;customer\&quot;,\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,50,17,20757500],&quot;historyId&quot;:&quot;5dea3c1e-b90f-412e-b7ac-0725d862e435&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,42,124471200],&quot;historyId&quot;:&quot;647648fe-e20c-488d-8c21-0f748c7574f4&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,41,964166900],&quot;historyId&quot;:&quot;df6bff68-898b-46fd-ab5c-1181eb9670ea&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,41,780764100],&quot;historyId&quot;:&quot;090b93ab-c9d9-4852-ade0-8686cf9e3d9a&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,41,612164600],&quot;historyId&quot;:&quot;3d429a1f-35fc-4ef0-975b-7dc792715feb&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,41,459863700],&quot;historyId&quot;:&quot;591e9483-cb05-4b63-934f-b1a087fd1a4b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,41,275460700],&quot;historyId&quot;:&quot;225b8aa2-904b-4e89-b793-dae8d32fb250&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,39,789157600],&quot;historyId&quot;:&quot;912c7add-caa3-4782-af1a-685e0f32a841&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,19,49,37,644370900],&quot;historyId&quot;:&quot;3ca1e03d-c6b9-40c1-b383-98ac8a7b65c1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,18,43,55,524063100],&quot;historyId&quot;:&quot;5f0a521d-a429-47af-b5ba-830b989d8f9f&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,18,43,49,325609400],&quot;historyId&quot;:&quot;fccf7b35-737f-4f6d-9bee-a9321f197054&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;,\r\n  \r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,18,43,45,628293300],&quot;historyId&quot;:&quot;fd704efc-d86f-4a05-aa66-10573fb09e28&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobber\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,18,42,26,301829700],&quot;historyId&quot;:&quot;bcef660e-b648-4097-8ec6-b11c18735344&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/signup&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\r\n  \&quot;user_name\&quot; : \&quot;def\&quot;,\r\n  \&quot;password\&quot; : \&quot;1234\&quot;,\r\n  \&quot;mail\&quot; : \&quot;jobaer\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,18,42,10,662962700],&quot;historyId&quot;:&quot;52f4fd13-996f-4ff1-af7b-74c30c5b187c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;type\&quot;: \&quot;worker\&quot;,\n  \&quot;role\&quot; : \&quot;ADMIN\&quot;,\n  \&quot;user_name\&quot;: \&quot;def\&quot;,\n  \&quot;password\&quot;: \&quot;1234\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,14,15,23,653028100],&quot;historyId&quot;:&quot;083a06a8-272e-41df-8903-ad36173fc833&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;type\&quot;: \&quot;worker\&quot;,\n  \&quot;role\&quot; : \&quot;ADMIN\&quot;,\n  \&quot;user_name\&quot;: \&quot;def\&quot;,\n  \&quot;password\&quot;: \&quot;1234\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,14,13,42,138872600],&quot;historyId&quot;:&quot;e436d6b8-8b9c-4a5f-bcbf-2bc55e20f5c0&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;type\&quot;: \&quot;worker\&quot;,\n  \&quot;role\&quot; : \&quot;ADMIN\&quot;,\n  \&quot;user_name\&quot;: \&quot;def\&quot;,\n  \&quot;password\&quot;: \&quot;1234\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,14,13,33,74668700],&quot;historyId&quot;:&quot;71a41938-6d46-4861-80a9-b5bb677e3633&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;type\&quot;: \&quot;worker\&quot;,\n  \&quot;role\&quot; : \&quot;ADMIN\&quot;,\n  \&quot;user_name\&quot;: \&quot;def\&quot;,\n  \&quot;password\&quot;: \&quot;1234\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,13,37,15,221331000],&quot;historyId&quot;:&quot;14e2d962-7ca4-446c-8954-97a4f3859420&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;type\&quot;: \&quot;worker\&quot;,\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\n  \&quot;user_name\&quot;: \&quot;def\&quot;,\n  \&quot;password\&quot;: \&quot;1234\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,13,37,1,292523900],&quot;historyId&quot;:&quot;620cb556-989c-450f-8acb-35ffc6efc6d8&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;type\&quot;: \&quot;wroker\&quot;,\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\n  \&quot;user_name\&quot;: \&quot;def\&quot;,\n  \&quot;password\&quot;: \&quot;1234\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,13,36,55,741158500],&quot;historyId&quot;:&quot;161ec8bc-37ce-4ad2-a009-f0845285440a&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;ee691603450f8d87a670aa417c313723&quot;,&quot;moduleName&quot;:&quot;myserver&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/login&quot;,&quot;simpleClassName&quot;:&quot;org.fixated.controllers.LogInController&quot;,&quot;methodName&quot;:&quot;worker&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;&quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;type\&quot;: \&quot;customer\&quot;,\n  \&quot;role\&quot; : \&quot;CUSTOMER\&quot;,\n  \&quot;user_name\&quot;: \&quot;def\&quot;,\n  \&quot;password\&quot;: \&quot;1234\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,1,27,13,33,5,729337500],&quot;historyId&quot;:&quot;efa623d0-c507-4d02-93f9-df7aaea8f83a&quot;}]" />
  </component>
</project>